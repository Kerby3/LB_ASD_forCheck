#include <iostream> //библиотека для работы с поточным вводом/выводом
#include <string> // библиотека для работы с строкой
#include <vector> // библиотека для работы с векторами
using namespace std; // именное пространство std для короткого вызова команд cin, cout, endl

int checkNumber(string num) { // функция для проверки числа на соответствие условию задачи
    bool flag = false; //флаг для сигнализации ошибок
    int convertedNum = 0; //сюда запишем результат
    for (int i = 0; i < size(num); i++) { //цикл для проверки правильности ввода, проходимся по каждому символу
        if (isdigit(num[i]) == 0) { //если символ не является цифрой (isdigit() возвращает 0, если символ не является цифрой и какое-то число в противном случае)
            flag = true; //то ставим флаг
            break; // и выходим из цикла
        }
    }
    if (flag == false) { //если флаг не изменился
        convertedNum = stoi(num); //то записываем в результат num конвертированный в int
    }
    if (convertedNum < 1) { //если введено число < 0
        flag = true; //то ставим флаг
    }
    if (flag == true) { //контрольная проверка, если флаг поднят, то введено неверное значение
        return 0;
    } else { //иначе возвращаем результат
        return convertedNum;
    }
}


int divideBy7(int num) { //функция, рекурсивно делящая на 7
    if (num == 1) { //если число = 1, то это число 7 в какой-либо степени
        return num;
    } 
    if (num % 7 == 0) { //проверка, делится ли нацело число
        num /= 7; //если делится, то делим
        return divideBy7(num); //и опять вызываем функцию с новым числом
    } else {
        return num; //если не делится, то просто возвращаем
    }
}

int divideBy5(int num) { //функция, рекурсивно делящая на 5
    if (num == 1) { //если число = 1, то это число 5 в какой-либо степени
        return num;
    }
    if (num % 5 == 0) { //проверка, делится ли нацело число
        num /= 5; //если делится, то делим
        return divideBy7(num); //и опять вызываем функцию с новым числом
    }
    else {
        return num; //если не делится, то просто возвращаем
    }
}

int divideBy3(int num) { //функция, рекурсивно делящая на 3
    if (num == 1) { //если число = 1, то это число 3 в какой-либо степени
        return num;
    }
    if (num % 3 == 0) { //проверка, делится ли нацело число
        num /= 3; //если делится, то делим
        return divideBy7(num); //и опять вызываем функцию с новым числом
    }
    else {
        return num; //если не делится, то просто возвращаем
    }
}

vector<int> findMultipliers(double num) {
    vector <int> nums; //тут будем хранить числа, удоавлетворяющие условию задачи
    int tmp = 0;//клон счетчика, его будем проверять на выполнение условия задачи
    for (int i = 1; i <= num; i++) {
        tmp = i;
        tmp = divideBy7(tmp); //делим рекурсивно нацело на 7
        tmp = divideBy5(tmp); //делим рекурсивно нацело на 5
        tmp = divideBy3(tmp); //делим рекурсивно нацело на 3
        if (tmp == 1) { //если в результате вызова функций получилось число 1, то это значит, что число состоит из множителей 3, 5, 7
            nums.push_back(i); //и мы добавляем это число в вектор nums
        }
    }
    return nums; //возвращаем вектор nums
}

int main()
{
    setlocale(LC_ALL, "Russian"); //нужно для работы с русским языком
    cout << "Введите целое число > 0" << endl; //сообщение о приглашении на ввод
    string inputNumber = ""; //тут храним ввод
    cin >> inputNumber; //приглашение на ввод
    int number = checkNumber(inputNumber); //проверяем введенную строку на корректность
    if (number == 0) { //если функция вернула 0, то строка некорректна
        cout << "Неверный ввод" << endl; // сообщение о неверном вводе
        return 0; // завершение программы
    }
    vector <int> arrayOfNums = findMultipliers(number); //вектор, содержащий числа, которые подходят условию задачи
    for (int i = 0; i < size(arrayOfNums); i++) { // вывод их через цикл
        cout << arrayOfNums[i] << endl;
    }    
}
